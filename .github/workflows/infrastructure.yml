name: Infrastructure

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy
  push:
    branches: [main]
    paths: ['deploy/gcp/**']

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.0
        
    - name: Configure GCP credentials
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Terraform Init
      working-directory: deploy/gcp
      run: terraform init
      
    - name: Terraform Plan
      if: github.event_name == 'push' || github.event.inputs.action == 'plan'
      working-directory: deploy/gcp
      run: |
        terraform plan \
          -var="project_id=${{ secrets.GCP_PROJECT_ID }}" \
          -out=tfplan
      continue-on-error: true
      
    - name: Terraform Apply
      if: github.event.inputs.action == 'apply'
      working-directory: deploy/gcp
      run: |
        terraform apply -auto-approve \
          -var="project_id=${{ secrets.GCP_PROJECT_ID }}"
          
    - name: Terraform Destroy
      if: github.event.inputs.action == 'destroy'
      working-directory: deploy/gcp
      run: |
        terraform destroy -auto-approve \
          -var="project_id=${{ secrets.GCP_PROJECT_ID }}"
          
    - name: Output IP
      if: github.event.inputs.action == 'apply'
      working-directory: deploy/gcp
      run: |
        echo "Instance IP: $(terraform output -raw instance_ip)"
        echo "instance_ip=$(terraform output -raw instance_ip)" >> $GITHUB_OUTPUT
      id: terraform_output
      
    - name: Set deployment output
      if: github.event.inputs.action == 'apply'
      run: |
        echo "deployment_ip=${{ steps.terraform_output.outputs.instance_ip }}" >> $GITHUB_OUTPUT
      id: deployment